# add checkmail function
function checkmail () {
	local mail="$(_checkmail)"
	if [ $mail ]; then
		echo $mail
	else
		echo "No unread mail"
	fi
	write_unread_mail_count $mail
}

function _checkmail () {
curl -u $(cat ~/.mail/.username | base64 -d) --silent "https://mail.google.com/mail/feed/atom" | tr -d '\n' | awk -F '<entry>' '{for (i=2; i<=NF; i++) {print $i}}' | perl -pe 's/^<title>(.*)<\/title>.*?<name>(.*?)<\/name>.*?<email>(.*?)<\/email>.*$/\033[33;1m$2 \033[0m(\033[36;1m$3\033[0m) - $1/' | sed "s/&#39;/'/g"
}

# add mailcount function
function mailcount () {
	if [ $1 ]; then
		echo $1 | wc -l | tr -d ' '
	else
		_checkmail | wc -l | tr -d ' '
	fi
}

function write_unread_mail_count () {
	mkdir -p ~/.mail
	echo $(mailcount $1) > ~/.mail/unread_count
}

function read_unread_mail_count () {
	cat ~/.mail/unread_count
}

function mailchecker () {
	while [ true ]; do
		write_unread_mail_count
		sleep 120
	done
}

# spawn mailcheck daemon
function spawn_mailchecker () {
	oldpid=$(cat ~/.mail/pid)
	kill -9 $oldpid > /dev/null
	mailchecker &!
	mailchecker_pid=$!
	echo $mailchecker_pid > ~/.mail/pid
}

function _zshmail_configure () {
	echo "It is recommended that you use a Google application-specific password for this."
	echo "See https://www.google.com/accounts/IssuedAuthSubTokens?hide_authsub=1 to generate a new application-specific password if you're using 2-factor authentication."
	echo -n "Enter gmail username: "
	read username
	echo -n "Enter gmail password: "
	read -s password

	touch ~/.mail/.username
	chmod 0600 ~/.mail/.username
	echo "$username:$password" | base64 > ~/.mail/.username
	chmod 0400 ~/.mail/.username
}
